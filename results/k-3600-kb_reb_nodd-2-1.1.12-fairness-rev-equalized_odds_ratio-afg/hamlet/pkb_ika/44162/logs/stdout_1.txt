Sensitive groups ready!
Theory ready!
Theory:
step(normalization) :- true.
step(features) :- true.
step(mitigation) :- true.
step(rebalancing) :- true.
step(classification) :- true.
operator(normalization, power_transformer) :- true.
operator(normalization, robust_scaler) :- true.
operator(normalization, standard) :- true.
operator(normalization, minmax) :- true.
operator(features, select_k_best) :- true.
operator(features, pca) :- true.
operator(mitigation, corr_remover) :- true.
operator(mitigation, lfr) :- true.
operator(rebalancing, near_miss) :- true.
operator(rebalancing, smote) :- true.
operator(classification, knn) :- true.
operator(classification, nn) :- true.
operator(classification, rf) :- true.
hyperparameter(robust_scaler, with_centering, choice) :- true.
hyperparameter(robust_scaler, with_scaling, choice) :- true.
hyperparameter(standard, with_mean, choice) :- true.
hyperparameter(standard, with_std, choice) :- true.
hyperparameter(select_k_best, k, randint) :- true.
hyperparameter(pca, n_components, randint) :- true.
hyperparameter(corr_remover, alpha, choice) :- true.
hyperparameter(lfr, n_prototypes, choice) :- true.
hyperparameter(lfr, reconstruct_weight, choice) :- true.
hyperparameter(lfr, fairness_weight, choice) :- true.
hyperparameter(near_miss, n_neighbors, randint) :- true.
hyperparameter(smote, k_neighbors, randint) :- true.
hyperparameter(knn, n_neighbors, randint) :- true.
hyperparameter(knn, weights, choice) :- true.
hyperparameter(knn, metric, choice) :- true.
hyperparameter(nn, n_hidden_layers, choice) :- true.
hyperparameter(nn, n_neurons, choice) :- true.
hyperparameter(nn, activation, choice) :- true.
hyperparameter(nn, solver, choice) :- true.
hyperparameter(nn, alpha, choice) :- true.
hyperparameter(nn, learning_rate, choice) :- true.
hyperparameter(rf, n_estimators, choice) :- true.
hyperparameter(rf, max_depth, randint) :- true.
hyperparameter(rf, max_features, randint) :- true.
hyperparameter(rf, min_samples_split, randint) :- true.
hyperparameter(rf, max_leaf_nodes, randint) :- true.
hyperparameter(rf, bootstrap, choice) :- true.
hyperparameter(rf, criterion, choice) :- true.
domain(robust_scaler, with_centering, [true, false]) :- true.
domain(robust_scaler, with_scaling, [true, false]) :- true.
domain(standard, with_mean, [true, false]) :- true.
domain(standard, with_std, [true, false]) :- true.
domain(select_k_best, k, [1, 10]) :- true.
domain(pca, n_components, [1, 8]) :- true.
domain(corr_remover, alpha, [0.25, 0.5, 0.75, 1.0]) :- true.
domain(lfr, n_prototypes, [10, 50, 100, 200]) :- true.
domain(lfr, reconstruct_weight, [0.1, 0.5, 1.0, 2.0]) :- true.
domain(lfr, fairness_weight, [0.1, 0.5, 1.0, 2.0]) :- true.
domain(near_miss, n_neighbors, [1, 4]) :- true.
domain(smote, k_neighbors, [5, 8]) :- true.
domain(knn, n_neighbors, [3, 20]) :- true.
domain(knn, weights, [uniform, distance]) :- true.
domain(knn, metric, [minkowski, euclidean, manhattan]) :- true.
domain(nn, n_hidden_layers, [1, 5, 10, 20]) :- true.
domain(nn, n_neurons, [5, 10, 25, 50]) :- true.
domain(nn, activation, [logistic, tanh, relu]) :- true.
domain(nn, solver, [lbfgs, sgd, adam]) :- true.
domain(nn, alpha, [0.0001, 0.001, 0.01, 0.00001]) :- true.
domain(nn, learning_rate, [constant, invscaling, adaptive]) :- true.
domain(rf, n_estimators, [10, 25, 50, 75, 100]) :- true.
domain(rf, max_depth, [1, 5]) :- true.
domain(rf, max_features, [1, 4]) :- true.
domain(rf, min_samples_split, [2, 6]) :- true.
domain(rf, max_leaf_nodes, [2, 6]) :- true.
domain(rf, bootstrap, [true, false]) :- true.
domain(rf, criterion, [gini, entropy]) :- true.
':=>'(c1, mandatory([mitigation], classification)) :- true.
':=>'(c3, mandatory_order([mitigation, features], classification)) :- true.
':=>'(c4, mandatory_order([mitigation, normalization], classification)) :- true.
':=>'(c5, mandatory([normalization], knn)) :- true.
':=>'(c6, mandatory([normalization], nn)) :- true.
dataset(compass) :- true.
metric(balanced_accuracy) :- true.
fairness_metric(equalized_odds_ratio) :- true.
sensitive_feature(sex, [0, 1]) :- true.
sensitive_feature(race, [0, 1, 2, 3, 4, 5]) :- true.
pipeline([Step_1_0], ZZ_0) :- (step(Step_1_0), '\\='(Step_1_0, classification), operator(classification, ZZ_0)).
pipeline([Step_1_1, Step_2_0], ZZ_1) :- (step(Step_1_1), step(Step_2_0), '\\='(Step_1_1, classification), '\\='(Step_2_0, classification), '\\='(Step_1_1, Step_2_0), operator(classification, ZZ_1)).
pipeline([Step_1_2, Step_2_1, Step_3_0], ZZ_2) :- (step(Step_1_2), step(Step_2_1), step(Step_3_0), '\\='(Step_1_2, classification), '\\='(Step_2_1, classification), '\\='(Step_3_0, classification), '\\='(Step_1_2, Step_2_1), '\\='(Step_1_2, Step_3_0), '\\='(Step_2_1, Step_3_0), operator(classification, ZZ_2)).
pipeline([Step_1_3, Step_2_2, Step_3_1, Step_4_0], ZZ_3) :- (step(Step_1_3), step(Step_2_2), step(Step_3_1), step(Step_4_0), '\\='(Step_1_3, classification), '\\='(Step_2_2, classification), '\\='(Step_3_1, classification), '\\='(Step_4_0, classification), '\\='(Step_1_3, Step_2_2), '\\='(Step_1_3, Step_3_1), '\\='(Step_1_3, Step_4_0), '\\='(Step_2_2, Step_3_1), '\\='(Step_2_2, Step_4_0), '\\='(Step_3_1, Step_4_0), operator(classification, ZZ_3)).
':=>'(p206780, sensitive_group([0])) :- true.
':=>'(p470064, sensitive_group([1])) :- true.
':=>'(p590830, sensitive_group([0])) :- true.
':=>'(p692379, sensitive_group([1])) :- true.
':=>'(p108986, sensitive_group([2])) :- true.
':=>'(p415984, sensitive_group([3])) :- true.
':=>'(p168675, sensitive_group([4])) :- true.
':=>'(p374733, sensitive_group([5])) :- true.
':=>'(p29459, sensitive_group([0, 0])) :- true.
':=>'(p574644, sensitive_group([0, 1])) :- true.
':=>'(p336018, sensitive_group([0, 2])) :- true.
':=>'(p500036, sensitive_group([0, 3])) :- true.
':=>'(p409991, sensitive_group([0, 4])) :- true.
':=>'(p164896, sensitive_group([0, 5])) :- true.
':=>'(p521035, sensitive_group([1, 0])) :- true.
':=>'(p622488, sensitive_group([1, 1])) :- true.
':=>'(p262134, sensitive_group([1, 2])) :- true.
':=>'(p963201, sensitive_group([1, 3])) :- true.
':=>'(p439959, sensitive_group([1, 4])) :- true.
':=>'(p679533, sensitive_group([1, 5])) :- true.
':=>'(p653377, pipeline([], knn)) :- true.
':=>'(p515572, pipeline([], knn)) :- true.
':=>'(p470834, pipeline([], nn)) :- true.
':=>'(p136135, pipeline([], nn)) :- true.
':=>'(p337852, pipeline([], rf)) :- true.
':=>'(p775791, pipeline([normalization], knn)) :- true.
':=>'(p194968, pipeline([normalization], nn)) :- true.
':=>'(p355152, pipeline([normalization], rf)) :- true.
':=>'(p524022, pipeline([features], knn)) :- true.
':=>'(p819400, pipeline([features], knn)) :- true.
':=>'(p989801, pipeline([features], nn)) :- true.
':=>'(p886964, pipeline([features], nn)) :- true.
':=>'(p437148, pipeline([features], rf)) :- true.
':=>'(p739695, pipeline([mitigation], knn)) :- true.
':=>'(p560249, pipeline([mitigation], nn)) :- true.
':=>'(p380106, pipeline([rebalancing], knn)) :- true.
':=>'(p960249, pipeline([rebalancing], knn)) :- true.
':=>'(p231839, pipeline([rebalancing], nn)) :- true.
':=>'(p58411, pipeline([rebalancing], nn)) :- true.
':=>'(p661509, pipeline([rebalancing], rf)) :- true.
':=>'(p385150, pipeline([normalization, features], knn)) :- true.
':=>'(p629554, pipeline([normalization, features], nn)) :- true.
':=>'(p632453, pipeline([normalization, features], rf)) :- true.
':=>'(p223796, pipeline([normalization, mitigation], knn)) :- true.
':=>'(p52251, pipeline([normalization, mitigation], nn)) :- true.
':=>'(p837341, pipeline([normalization, mitigation], rf)) :- true.
':=>'(p43397, pipeline([normalization, rebalancing], knn)) :- true.
':=>'(p87854, pipeline([normalization, rebalancing], nn)) :- true.
':=>'(p138547, pipeline([normalization, rebalancing], rf)) :- true.
':=>'(p417035, pipeline([features, normalization], knn)) :- true.
':=>'(p311633, pipeline([features, normalization], nn)) :- true.
':=>'(p97502, pipeline([features, normalization], rf)) :- true.
':=>'(p280786, pipeline([features, mitigation], knn)) :- true.
':=>'(p894882, pipeline([features, mitigation], knn)) :- true.
':=>'(p269409, pipeline([features, mitigation], nn)) :- true.
':=>'(p820189, pipeline([features, mitigation], nn)) :- true.
':=>'(p214008, pipeline([features, mitigation], rf)) :- true.
':=>'(p62747, pipeline([features, rebalancing], knn)) :- true.
':=>'(p240278, pipeline([features, rebalancing], knn)) :- true.
':=>'(p49229, pipeline([features, rebalancing], nn)) :- true.
':=>'(p857512, pipeline([features, rebalancing], nn)) :- true.
':=>'(p76256, pipeline([features, rebalancing], rf)) :- true.
':=>'(p789509, pipeline([mitigation, features], knn)) :- true.
':=>'(p957088, pipeline([mitigation, features], nn)) :- true.
':=>'(p162286, pipeline([mitigation, rebalancing], knn)) :- true.
':=>'(p222268, pipeline([mitigation, rebalancing], nn)) :- true.
':=>'(p98069, pipeline([rebalancing, normalization], knn)) :- true.
':=>'(p796758, pipeline([rebalancing, normalization], nn)) :- true.
':=>'(p697056, pipeline([rebalancing, normalization], rf)) :- true.
':=>'(p207014, pipeline([rebalancing, features], knn)) :- true.
':=>'(p226426, pipeline([rebalancing, features], knn)) :- true.
':=>'(p897971, pipeline([rebalancing, features], nn)) :- true.
':=>'(p838285, pipeline([rebalancing, features], nn)) :- true.
':=>'(p539188, pipeline([rebalancing, features], rf)) :- true.
':=>'(p569776, pipeline([rebalancing, mitigation], knn)) :- true.
':=>'(p465373, pipeline([rebalancing, mitigation], nn)) :- true.
':=>'(p699183, pipeline([normalization, features, mitigation], knn)) :- true.
':=>'(p443884, pipeline([normalization, features, mitigation], knn)) :- true.
':=>'(p305146, pipeline([normalization, features, mitigation], nn)) :- true.
':=>'(p175905, pipeline([normalization, features, mitigation], nn)) :- true.
':=>'(p701018, pipeline([normalization, features, mitigation], rf)) :- true.
':=>'(p155955, pipeline([normalization, features, mitigation], rf)) :- true.
':=>'(p365835, pipeline([normalization, features, rebalancing], knn)) :- true.
':=>'(p920124, pipeline([normalization, features, rebalancing], nn)) :- true.
':=>'(p807140, pipeline([normalization, features, rebalancing], rf)) :- true.
':=>'(p318937, pipeline([normalization, mitigation, features], knn)) :- true.
':=>'(p203785, pipeline([normalization, mitigation, features], nn)) :- true.
':=>'(p34375, pipeline([normalization, mitigation, features], rf)) :- true.
':=>'(p705543, pipeline([normalization, mitigation, rebalancing], knn)) :- true.
':=>'(p429454, pipeline([normalization, mitigation, rebalancing], nn)) :- true.
':=>'(p654146, pipeline([normalization, mitigation, rebalancing], rf)) :- true.
':=>'(p514692, pipeline([normalization, rebalancing, features], knn)) :- true.
':=>'(p678045, pipeline([normalization, rebalancing, features], nn)) :- true.
':=>'(p131985, pipeline([normalization, rebalancing, features], rf)) :- true.
':=>'(p43393, pipeline([normalization, rebalancing, mitigation], knn)) :- true.
':=>'(p240561, pipeline([normalization, rebalancing, mitigation], nn)) :- true.
':=>'(p500015, pipeline([normalization, rebalancing, mitigation], rf)) :- true.
':=>'(p505209, pipeline([features, normalization, mitigation], knn)) :- true.
':=>'(p904582, pipeline([features, normalization, mitigation], knn)) :- true.
':=>'(p660926, pipeline([features, normalization, mitigation], nn)) :- true.
':=>'(p573893, pipeline([features, normalization, mitigation], nn)) :- true.
':=>'(p321593, pipeline([features, normalization, mitigation], rf)) :- true.
':=>'(p897426, pipeline([features, normalization, mitigation], rf)) :- true.
':=>'(p807457, pipeline([features, normalization, rebalancing], knn)) :- true.
':=>'(p268155, pipeline([features, normalization, rebalancing], nn)) :- true.
':=>'(p537370, pipeline([features, normalization, rebalancing], rf)) :- true.
':=>'(p439415, pipeline([features, mitigation, normalization], knn)) :- true.
':=>'(p153916, pipeline([features, mitigation, normalization], nn)) :- true.
':=>'(p380719, pipeline([features, mitigation, normalization], rf)) :- true.
':=>'(p78455, pipeline([features, mitigation, rebalancing], knn)) :- true.
':=>'(p335370, pipeline([features, mitigation, rebalancing], knn)) :- true.
':=>'(p809624, pipeline([features, mitigation, rebalancing], nn)) :- true.
':=>'(p61750, pipeline([features, mitigation, rebalancing], nn)) :- true.
':=>'(p536210, pipeline([features, mitigation, rebalancing], rf)) :- true.
':=>'(p410551, pipeline([features, rebalancing, normalization], knn)) :- true.
':=>'(p945358, pipeline([features, rebalancing, normalization], nn)) :- true.
':=>'(p899752, pipeline([features, rebalancing, normalization], rf)) :- true.
':=>'(p659794, pipeline([features, rebalancing, mitigation], knn)) :- true.
':=>'(p999019, pipeline([features, rebalancing, mitigation], knn)) :- true.
':=>'(p383006, pipeline([features, rebalancing, mitigation], nn)) :- true.
':=>'(p705407, pipeline([features, rebalancing, mitigation], nn)) :- true.
':=>'(p796065, pipeline([features, rebalancing, mitigation], rf)) :- true.
':=>'(p66287, pipeline([mitigation, features, rebalancing], knn)) :- true.
':=>'(p868552, pipeline([mitigation, features, rebalancing], nn)) :- true.
':=>'(p38277, pipeline([mitigation, rebalancing, features], knn)) :- true.
':=>'(p544216, pipeline([mitigation, rebalancing, features], nn)) :- true.
':=>'(p536146, pipeline([rebalancing, normalization, features], knn)) :- true.
':=>'(p433472, pipeline([rebalancing, normalization, features], nn)) :- true.
':=>'(p618365, pipeline([rebalancing, normalization, features], rf)) :- true.
':=>'(p265105, pipeline([rebalancing, normalization, mitigation], knn)) :- true.
':=>'(p347770, pipeline([rebalancing, normalization, mitigation], nn)) :- true.
':=>'(p112621, pipeline([rebalancing, normalization, mitigation], rf)) :- true.
':=>'(p772041, pipeline([rebalancing, features, normalization], knn)) :- true.
':=>'(p628648, pipeline([rebalancing, features, normalization], nn)) :- true.
':=>'(p911588, pipeline([rebalancing, features, normalization], rf)) :- true.
':=>'(p337273, pipeline([rebalancing, features, mitigation], knn)) :- true.
':=>'(p985657, pipeline([rebalancing, features, mitigation], knn)) :- true.
':=>'(p854786, pipeline([rebalancing, features, mitigation], nn)) :- true.
':=>'(p482665, pipeline([rebalancing, features, mitigation], nn)) :- true.
':=>'(p562560, pipeline([rebalancing, features, mitigation], rf)) :- true.
':=>'(p589843, pipeline([rebalancing, mitigation, features], knn)) :- true.
':=>'(p621556, pipeline([rebalancing, mitigation, features], nn)) :- true.
':=>'(p597014, pipeline([normalization, features, mitigation, rebalancing], knn)) :- true.
':=>'(p642086, pipeline([normalization, features, mitigation, rebalancing], knn)) :- true.
':=>'(p181785, pipeline([normalization, features, mitigation, rebalancing], nn)) :- true.
':=>'(p778359, pipeline([normalization, features, mitigation, rebalancing], nn)) :- true.
':=>'(p538765, pipeline([normalization, features, mitigation, rebalancing], rf)) :- true.
':=>'(p860538, pipeline([normalization, features, mitigation, rebalancing], rf)) :- true.
':=>'(p500621, pipeline([normalization, features, rebalancing, mitigation], knn)) :- true.
':=>'(p787926, pipeline([normalization, features, rebalancing, mitigation], knn)) :- true.
':=>'(p478694, pipeline([normalization, features, rebalancing, mitigation], nn)) :- true.
':=>'(p13152, pipeline([normalization, features, rebalancing, mitigation], nn)) :- true.
':=>'(p169780, pipeline([normalization, features, rebalancing, mitigation], rf)) :- true.
':=>'(p576533, pipeline([normalization, features, rebalancing, mitigation], rf)) :- true.
':=>'(p219967, pipeline([normalization, mitigation, features, rebalancing], knn)) :- true.
':=>'(p833002, pipeline([normalization, mitigation, features, rebalancing], nn)) :- true.
':=>'(p338721, pipeline([normalization, mitigation, features, rebalancing], rf)) :- true.
':=>'(p475554, pipeline([normalization, mitigation, rebalancing, features], knn)) :- true.
':=>'(p407527, pipeline([normalization, mitigation, rebalancing, features], nn)) :- true.
':=>'(p47614, pipeline([normalization, mitigation, rebalancing, features], rf)) :- true.
':=>'(p694474, pipeline([normalization, rebalancing, features, mitigation], knn)) :- true.
':=>'(p797436, pipeline([normalization, rebalancing, features, mitigation], knn)) :- true.
':=>'(p964459, pipeline([normalization, rebalancing, features, mitigation], nn)) :- true.
':=>'(p257805, pipeline([normalization, rebalancing, features, mitigation], nn)) :- true.
':=>'(p633779, pipeline([normalization, rebalancing, features, mitigation], rf)) :- true.
':=>'(p668259, pipeline([normalization, rebalancing, features, mitigation], rf)) :- true.
':=>'(p804529, pipeline([normalization, rebalancing, mitigation, features], knn)) :- true.
':=>'(p23875, pipeline([normalization, rebalancing, mitigation, features], nn)) :- true.
':=>'(p689127, pipeline([normalization, rebalancing, mitigation, features], rf)) :- true.
':=>'(p263009, pipeline([features, normalization, mitigation, rebalancing], knn)) :- true.
':=>'(p885770, pipeline([features, normalization, mitigation, rebalancing], knn)) :- true.
':=>'(p373972, pipeline([features, normalization, mitigation, rebalancing], nn)) :- true.
':=>'(p354261, pipeline([features, normalization, mitigation, rebalancing], nn)) :- true.
':=>'(p298824, pipeline([features, normalization, mitigation, rebalancing], rf)) :- true.
':=>'(p785550, pipeline([features, normalization, mitigation, rebalancing], rf)) :- true.
':=>'(p960700, pipeline([features, normalization, rebalancing, mitigation], knn)) :- true.
':=>'(p651303, pipeline([features, normalization, rebalancing, mitigation], knn)) :- true.
':=>'(p847692, pipeline([features, normalization, rebalancing, mitigation], nn)) :- true.
':=>'(p814746, pipeline([features, normalization, rebalancing, mitigation], nn)) :- true.
':=>'(p423096, pipeline([features, normalization, rebalancing, mitigation], rf)) :- true.
':=>'(p455563, pipeline([features, normalization, rebalancing, mitigation], rf)) :- true.
':=>'(p473898, pipeline([features, mitigation, normalization, rebalancing], knn)) :- true.
':=>'(p830947, pipeline([features, mitigation, normalization, rebalancing], nn)) :- true.
':=>'(p249178, pipeline([features, mitigation, normalization, rebalancing], rf)) :- true.
':=>'(p787488, pipeline([features, mitigation, rebalancing, normalization], knn)) :- true.
':=>'(p206424, pipeline([features, mitigation, rebalancing, normalization], nn)) :- true.
':=>'(p659110, pipeline([features, mitigation, rebalancing, normalization], rf)) :- true.
':=>'(p122568, pipeline([features, rebalancing, normalization, mitigation], knn)) :- true.
':=>'(p308142, pipeline([features, rebalancing, normalization, mitigation], knn)) :- true.
':=>'(p200660, pipeline([features, rebalancing, normalization, mitigation], nn)) :- true.
':=>'(p92897, pipeline([features, rebalancing, normalization, mitigation], nn)) :- true.
':=>'(p222231, pipeline([features, rebalancing, normalization, mitigation], rf)) :- true.
':=>'(p404824, pipeline([features, rebalancing, normalization, mitigation], rf)) :- true.
':=>'(p896631, pipeline([features, rebalancing, mitigation, normalization], knn)) :- true.
':=>'(p420152, pipeline([features, rebalancing, mitigation, normalization], nn)) :- true.
':=>'(p795603, pipeline([features, rebalancing, mitigation, normalization], rf)) :- true.
':=>'(p810089, pipeline([rebalancing, normalization, features, mitigation], knn)) :- true.
':=>'(p910736, pipeline([rebalancing, normalization, features, mitigation], knn)) :- true.
':=>'(p400801, pipeline([rebalancing, normalization, features, mitigation], nn)) :- true.
':=>'(p307722, pipeline([rebalancing, normalization, features, mitigation], nn)) :- true.
':=>'(p527059, pipeline([rebalancing, normalization, features, mitigation], rf)) :- true.
':=>'(p771775, pipeline([rebalancing, normalization, features, mitigation], rf)) :- true.
':=>'(p958970, pipeline([rebalancing, normalization, mitigation, features], knn)) :- true.
':=>'(p442463, pipeline([rebalancing, normalization, mitigation, features], nn)) :- true.
':=>'(p735333, pipeline([rebalancing, normalization, mitigation, features], rf)) :- true.
':=>'(p340531, pipeline([rebalancing, features, normalization, mitigation], knn)) :- true.
':=>'(p704214, pipeline([rebalancing, features, normalization, mitigation], knn)) :- true.
':=>'(p936556, pipeline([rebalancing, features, normalization, mitigation], nn)) :- true.
':=>'(p944543, pipeline([rebalancing, features, normalization, mitigation], nn)) :- true.
':=>'(p468770, pipeline([rebalancing, features, normalization, mitigation], rf)) :- true.
':=>'(p771031, pipeline([rebalancing, features, normalization, mitigation], rf)) :- true.
':=>'(p924377, pipeline([rebalancing, features, mitigation, normalization], knn)) :- true.
':=>'(p137634, pipeline([rebalancing, features, mitigation, normalization], nn)) :- true.
':=>'(p270539, pipeline([rebalancing, features, mitigation, normalization], rf)) :- true.

Checking Config
Exporting Config
Saving Graph
Exporting AutoML input
Exporting Space
Exporting Constraints
Input created for iteration Config(iteration=1, dataset=compass, metric=balanced_accuracy, fairnessMetric=equalized_odds_ratio, sensitiveFeatures=[sex, race], mode=max, batchSize=999999, timeBudget=900, seed=42)
Here is the standard output/error of the command:

560a99e30de834f43a6c625b01cee214bec522c9421f5f0d90d3d0acaa82b7f9
Here is the standard output/error of the command:

Here is the standard output/error of the command:

WARNING:root:No module named 'rpy2': FairAdapt will be unavailable. To install, run:
pip install 'aif360[FairAdapt]'
INFO:flaml.tune.searcher.blendsearch:No low-cost partial config given to the search algorithm. For cost-frugal search, consider providing low-cost values for cost-related hps via 'low_cost_partial_config'. More info can be found at https://microsoft.github.io/FLAML/docs/FAQ#about-low_cost_partial_config-in-tune
Trying to add: (Forbidden: normalization == 'FunctionTransformer' && Forbidden: classification == 'MLPClassifier')
Added successfully: (Forbidden: normalization == 'FunctionTransformer' && Forbidden: classification == 'MLPClassifier')
Trying to add: (Forbidden: normalization == 'FunctionTransformer' && Forbidden: classification == 'KNeighborsClassifier')
Failed to add: (Forbidden: normalization == 'FunctionTransformer' && Forbidden: classification == 'KNeighborsClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: normalization == 'FunctionTransformer')
Trying to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'KNeighborsClassifier')
Failed to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'KNeighborsClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'MLPClassifier')
Failed to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'MLPClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'RandomForestClassifier')
Failed to add: (Forbidden: mitigation == 'FunctionTransformer' && Forbidden: classification == 'RandomForestClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'KNeighborsClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'KNeighborsClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'MLPClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'MLPClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'RandomForestClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'features_mitigation_normalization_rebalancing_classification', 'features_mitigation_rebalancing_normalization_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'features_rebalancing_mitigation_normalization_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'rebalancing_features_mitigation_normalization_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: features in {'SelectKBest', 'PCA'} && Forbidden: classification == 'RandomForestClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'KNeighborsClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'KNeighborsClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'MLPClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'MLPClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
Trying to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'RandomForestClassifier')
Failed to add: (Forbidden: prototype in {'normalization_features_mitigation_rebalancing_classification', 'features_normalization_mitigation_rebalancing_classification', 'normalization_mitigation_features_rebalancing_classification', 'normalization_mitigation_rebalancing_features_classification', 'normalization_features_rebalancing_mitigation_classification', 'features_normalization_rebalancing_mitigation_classification', 'features_rebalancing_normalization_mitigation_classification', 'normalization_rebalancing_features_mitigation_classification', 'rebalancing_normalization_features_mitigation_classification', 'rebalancing_features_normalization_mitigation_classification', 'normalization_rebalancing_mitigation_features_classification', 'rebalancing_normalization_mitigation_features_classification'} && Forbidden: mitigation in {'CorrelationRemover', 'LFR_wrapper'} && Forbidden: normalization in {'PowerTransformer', 'RobustScaler', 'StandardScaler', 'MinMaxScaler'} && Forbidden: classification == 'RandomForestClassifier')
Reason: Given vector violates forbidden clause: (Forbidden: classification == 'KNeighborsClassifier' && Forbidden: mitigation == 'FunctionTransformer')
AutoML: starting optimization.
1
success
{'classification': {'type': np.str_('RandomForestClassifier'), 'bootstrap': np.True_, 'criterion': np.str_('entropy'), 'max_depth': 5, 'max_features': 3, 'max_leaf_nodes': 4, 'min_samples_split': 2, 'n_estimators': np.int64(75)}, 'features': {'type': np.str_('PCA'), 'n_components': 5}, 'mitigation': {'type': np.str_('CorrelationRemover'), 'alpha': np.float64(0.25)}, 'rebalancing': {'type': np.str_('NearMiss'), 'n_neighbors': 1}, 'normalization': {'type': np.str_('MinMaxScaler')}, 'prototype': np.str_('mitigation_features_rebalancing_normalization_classification')}
{'equalized_odds_ratio': np.float64(0.23911797852199515), 'balanced_accuracy': np.float64(0.6868281492474073), 'by_group': {'0_0': np.float64(0.67), '0_2': np.float64(0.6), '0_3': np.float64(0.25), '1_0': np.float64(0.99), '1_2': np.float64(0.58), '1_3': np.float64(0.6), '1_5': np.float64(0.51)}, 'status': 'success', 'total_time': 7.491358280181885, 'fit_time': np.float64(1.4091583251953126), 'score_time': np.float64(0.016274309158325194), 'absolute_time': 1746709634.8382728, 'flatten_equalized_odds_ratio': '0.26_0.39_0.0_0.3_0.25', 'flatten_balanced_accuracy': '0.68_0.7_0.69_0.69_0.67'}
2
success
{'classification': {'type': np.str_('KNeighborsClassifier'), 'metric': np.str_('manhattan'), 'n_neighbors': 15, 'weights': np.str_('uniform')}, 'mitigation': {'type': np.str_('CorrelationRemover'), 'alpha': np.float64(1.0)}, 'normalization': {'type': np.str_('StandardScaler'), 'with_mean': np.True_, 'with_std': np.True_}, 'features': {'type': np.str_('FunctionTransformer')}, 'prototype': np.str_('rebalancing_mitigation_normalization_features_classification'), 'rebalancing': {'type': np.str_('FunctionTransformer')}}
{'equalized_odds_ratio': np.float64(0.15548483885797598), 'balanced_accuracy': np.float64(0.6656167307347565), 'by_group': {'0_0': np.float64(0.42), '0_2': np.float64(0.43), '0_3': np.float64(0.16), '1_0': np.float64(1.0), '1_2': np.float64(0.5), '1_3': np.float64(0.39), '1_5': np.float64(0.4)}, 'status': 'success', 'total_time': 11.10569429397583, 'fit_time': np.float64(0.03135337829589844), 'score_time': np.float64(1.0405550956726075), 'absolute_time': 1746709646.9692917, 'flatten_equalized_odds_ratio': '0.09_0.19_0.1_0.1_0.3', 'flatten_balanced_accuracy': '0.67_0.66_0.65_0.68_0.66'}
3
success
{'classification': {'type': np.str_('RandomForestClassifier'), 'bootstrap': np.False_, 'criterion': np.str_('gini'), 'max_depth': 3, 'max_features': 1, 'max_leaf_nodes': 5, 'min_samples_split': 6, 'n_estimators': np.int64(50)}, 'features': {'type': np.str_('PCA'), 'n_components': 4}, 'mitigation': {'type': np.str_('LFR_wrapper'), 'fairness_weight': np.float64(0.1), 'n_prototypes': np.int64(10), 'reconstruct_weight': np.float64(0.1)}, 'normalization': {'type': np.str_('FunctionTransformer')}, 'prototype': np.str_('rebalancing_normalization_mitigation_features_classification'), 'rebalancing': {'type': np.str_('FunctionTransformer')}}
{'equalized_odds_ratio': np.float64(0.5254439849722675), 'balanced_accuracy': np.float64(0.6232198832649185), 'by_group': {'0_0': np.float64(0.77), '0_2': np.float64(0.82), '0_3': np.float64(0.53), '1_0': np.float64(0.85), '1_2': np.float64(0.77), '1_3': np.float64(0.72), '1_5': np.float64(0.73)}, 'status': 'success', 'total_time': 335.9688446521759, 'fit_time': np.float64(67.09518747329712), 'score_time': np.float64(0.018859243392944335), 'absolute_time': 1746709982.9676485, 'flatten_equalized_odds_ratio': '0.56_0.64_0.61_0.27_0.54', 'flatten_balanced_accuracy': '0.65_0.62_0.61_0.61_0.61'}
4
success
{'classification': {'type': np.str_('KNeighborsClassifier'), 'metric': np.str_('minkowski'), 'n_neighbors': 15, 'weights': np.str_('uniform')}, 'features': {'type': np.str_('SelectKBest'), 'k': 7}, 'mitigation': {'type': np.str_('LFR_wrapper'), 'fairness_weight': np.float64(0.1), 'n_prototypes': np.int64(200), 'reconstruct_weight': np.float64(1.0)}, 'rebalancing': {'type': np.str_('NearMiss'), 'n_neighbors': 2}, 'normalization': {'type': np.str_('MinMaxScaler')}, 'prototype': np.str_('mitigation_features_rebalancing_normalization_classification')}
{'equalized_odds_ratio': np.float64(0.08135048231511254), 'balanced_accuracy': np.float64(0.5161259390195657), 'by_group': {'0_0': np.float64(0.46), '0_2': np.float64(0.65), '0_3': np.float64(0.18), '1_0': np.float64(0.59), '1_2': np.float64(0.49), '1_3': np.float64(0.5), '1_5': np.float64(0.61)}, 'status': 'success', 'total_time': 509.8161189556122, 'fit_time': np.float64(64.66897339820862), 'score_time': np.float64(0.2766068935394287), 'absolute_time': 1746710492.8175933, 'flatten_equalized_odds_ratio': '0.0_0.0_0.0_0.41_0.0', 'flatten_balanced_accuracy': '0.51_0.53_0.52_0.51_0.51'}
5
success
{'classification': {'type': np.str_('MLPClassifier'), 'activation': np.str_('logistic'), 'alpha': np.float64(0.0001), 'learning_rate': np.str_('constant'), 'n_hidden_layers': np.int64(10), 'n_neurons': np.int64(5), 'solver': np.str_('lbfgs')}, 'mitigation': {'type': np.str_('LFR_wrapper'), 'fairness_weight': np.float64(0.1), 'n_prototypes': np.int64(50), 'reconstruct_weight': np.float64(2.0)}, 'normalization': {'type': np.str_('StandardScaler'), 'with_mean': np.True_, 'with_std': np.True_}, 'rebalancing': {'type': np.str_('SMOTE'), 'k_neighbors': 5}, 'features': {'type': np.str_('FunctionTransformer')}, 'prototype': np.str_('features_rebalancing_mitigation_normalization_classification')}
{'equalized_odds_ratio': np.float64(0.2849757846805574), 'balanced_accuracy': np.float64(0.6366176035546823), 'by_group': {'0_0': np.float64(0.7), '0_2': np.float64(0.68), '0_3': np.float64(0.3), '1_0': np.float64(0.8), '1_2': np.float64(0.68), '1_3': np.float64(0.6), '1_5': np.float64(0.53)}, 'status': 'success', 'total_time': 402.9825830459595, 'fit_time': np.float64(80.49480924606323), 'score_time': np.float64(0.02752509117126465), 'absolute_time': 1746710895.8387792, 'flatten_equalized_odds_ratio': '0.42_0.25_0.0_0.54_0.21', 'flatten_balanced_accuracy': '0.63_0.64_0.62_0.62_0.67'}
AutoML: optimization done.
AutoML: miner done.
AutoML: export done.
Here is the standard output/error of the command:

Here is the standard output/error of the command:

Here is the standard output/error of the command:

hamlet_191310413
AutoML execution ended
